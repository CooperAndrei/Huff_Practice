//declares a function addTwo 
#define function addTwo(uint256, uint256) view returns(uint256)

//All calls to a contract (regardless of what function they are calling) will start from MAIN
//takes - number of items taken from stack
//When entering the contract the stack will be empty. 
//Upon completion we will not be leaving anything on the stack; therefore, takes and returns will both be 0.
#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload     // [number1] // load first 32 bytes onto the stack - number 1
    0x20 calldataload     // [number2] // load second 32 bytes onto the stack - number 2
    add                   // [number1+number2] // add number 1 and 2 and put the result onto the stack

    0x00 mstore           // place [number1 + number2] in memory
    0x20 0x00 return      // return the result
}

//everytime compiler would produce the same bytecode
// Compiling... 600c8060093d393df35f35602035015f5260205ff3
